<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nasaro.verses.model.mapper.ColumnMapper">

	<!-- 공지사항 count-->
    <select id="columnListCount">
        SELECT count(*) 
        FROM `COLUMN` v join `MEMBER` m on v.MEMBER_NO =m.MEMBER_NO 
        WHERE column_delete_fl='N' 
        	AND COLUMN_notice='N'
    </select>
    
    <!-- 검색어를 포함한 전체 목록 조회(count)-->
    <select id="columnListCountSearch" resultType="_int">
		SELECT COUNT(*) 
		FROM `COLUMN` v join `MEMBER` m on v.MEMBER_NO =m.MEMBER_NO 
		<!-- 작성자 검색 -->
		WHERE column_delete_fl='N'
			AND COLUMN_notice='N'
		<choose>
			<when test='key=="t"'>
				AND column_title LIKE '%${query}%'
			</when> 
			<when test='key=="c"'>
				AND column_content LIKE '%${query}%' 
			</when>
			<when test='key=="tc"'>
				AND (column_title LIKE '%${query}%' OR column_content LIKE '%${query}%')
			</when>
		</choose> 
	</select>
	
	<!--공지사항 목록 조회-->
    <select id="columnList" resultType="Column">
        SELECT m.MEMBER_NO, 
			m.MEMBER_NAME,
			m.MEMBER_NICKNAME,  
			v.column_NO, 
			v.column_TITLE, 
			v.column_CONTENT, 
			DATE_FORMAT(v.column_DATE, '%m-%d') column_DATE 
        FROM `COLUMN` v join `MEMBER` m on v.MEMBER_NO =m.MEMBER_NO 
        WHERE column_delete_fl='N' 
        	AND COLUMN_notice='N'
        ORDER BY column_NO DESC;
    </select>
    
    <!-- 검색어를 포함한  공지사항 조회결과  -->
    <select id="searchcolumnList" resultType="Column">
        SELECT m.MEMBER_NO, 
			m.MEMBER_NAME, 
			m.MEMBER_NICKNAME, 
			v.column_NO, 
			v.column_TITLE, 
			v.column_CONTENT, 
			DATE_FORMAT(v.column_DATE, '%m-%d') column_DATE 
        FROM `COLUMN` v join `MEMBER` m on v.MEMBER_NO =m.MEMBER_NO 
		<!-- 작성자 검색 -->
		WHERE column_delete_fl='N'
			AND COLUMN_notice='N'
		<choose>
			<when test='key=="t"'>
				AND column_title LIKE '%${query}%'
			</when> 
			<when test='key=="c"'>
				AND column_content LIKE '%${query}%' 
			</when>
			<when test='key=="tc"'>
				AND (column_title LIKE '%${query}%' OR column_content LIKE '%${query}%')
			</when>
		</choose> 
		ORDER BY column_NO DESC;
    </select>
    
    
        	<!--베스트 공지 조회-->
    <select id="bestColumnList" resultType="Column">
        SELECT m.MEMBER_NO, 
			m.MEMBER_NAME, 
			m.MEMBER_NICKNAME, 
			v.column_NO, 
			v.column_TITLE, 
			v.column_CONTENT, 
			DATE_FORMAT(v.column_DATE, '%m-%d') COLUMN_DATE 
        FROM `COLUMN` v join `MEMBER` m on v.MEMBER_NO =m.MEMBER_NO 
        WHERE COLUMN_delete_fl='N'
        	AND COLUMN_notice='Y'
        ORDER BY COLUMN_NO DESC;
    </select>
    
	
		<!-- column-->
	<select id="detailedColumn">
		SELECT m.MEMBER_NO, 
			m.MEMBER_NAME, 
			m.MEMBER_NICKNAME, 
			v.column_NO, 
			v.column_TITLE, 
			v.column_CONTENT, 
			DATE_FORMAT(v.column_DATE, '%m-%d') COLUMN_DATE 
        FROM `COLUMN` v join `MEMBER` m on v.MEMBER_NO =m.MEMBER_NO 
        WHERE column_no = #{No} 
	</select>
	
		<!-- column 작성 -->
    <insert id="insertColumn" parameterType="Column" >
        INSERT INTO `COLUMN`
        VALUES (DEFAULT, #{memberNo}, #{columnTitle}, #{columnContent}, DEFAULT, DEFAULT, DEFAULT)
    </insert>
    
    
    			<!-- 삭제 -->
    <update id="deleteColumn" parameterType="Column" >
		UPDATE `COLUMN` 
		SET column_delete_fl ='Y' 
		WHERE column_no=#{columnNo}
    </update>
	
		<!-- 수정 -->
    <update id="updateColumn" parameterType="Column" >
		UPDATE `COLUMN` 
		SET column_title = #{columnTitle}, column_content=#{columnContent} 
		WHERE column_no=#{columnNo}
    </update>

</mapper>

